Hi Mohamed,

Here is the full set of comments.  I also have some general writing suggestions:

1. I noticed that in several theorem statements, you have sentences like "let f:a -> b be a morphism" where the f never gets used.  I tried to mark these each time I noticed them, but it's a good idea to, each time you rewrite a theorem, make sure that each named variable is necessary for the statement, starting from the conclusion of the theorem and working backward. (And that all the variables appearing in the conclusion have been defined!)  Sometimes the "f" (or whatever extra variable you listed) appears in the proof, but it's appropriate to introduce it then and not earlier.

2. More broadly, sometimes you can simplify parts of the paper by thinking about what you will need to use later on.  Ideally, every lemma and definition will be used later (otherwise, just get rid of them!), but if they're only used once, then they can be folded into that later usage.  For example, do you ever use Lemma 35 except to prove Lemma 38?  And for that matter, do you ever use Lemma 38?

3. Finally, none of the internal references are working—is that something you need help setting up?  It's also very helpful to have the lemmas, corollaries, etc. numbered by section, e.g. Definition 1.1.6, Definition 1.2.1.  For one thing, it notifies you when a section has a higher-than-usual amount of numbered entries and you should consider breaking it up.  And for another, when you're reading and see "by Lemma 1.2.6", if you're familiar with the organization then you'll know this is one of the "restricting a topology to a slice category" lemmas.  But any correct referencing is preferable to the question marks in their places right now.

You also asked if I have any suggestions for simplifying some of the details.  There are at least two places where you have basically two identical objects and it's a big headache making sure that the things you do for one are the things you do for the other: sieves on a category and a slice category, and sheafifying before or after restricting to a slice category.  For sieves, I think this would improve a lot if you regarded a sieve on A as a collection of morphisms to A, rather than as a subfunctor of the functor of points of A.  Then the Q^f and L^f (why are they called that?) are just "interpret the same family of morphisms as a sieve in a different way", and it becomes much clearer why they are inverse operations.  For sheafifying (especially the proof of Lemma 38), it's okay to treat s as an identification, check privately that everything works, and just say so—especially if the checking is tedious but not particularly hard.

Unfortunately, I totally lost you at Lemma 41.  I have no idea what's going on in the statement of that lemma.  You may find string diagrams a useful way to organize various identities, at least for yourself. (That's how I found the proof of lemma 38 from lemma 35 that I wrote on the bottom of page 10.)  It takes a lot of work to incorporate them into a thesis, though.

Best wishes, and let me know if there's a section you want me to focus on for next time,
Owen